buildscript {
    ext {
        apache = '2.15.1'
        apachexml = '5.2.5'
        selenium = '4.18.1'
        testng = '7.9.0'
        cucumber = '7.15.0'
        log4j = '2.23.1'
        allure = '2.26.0'
        aspectj = '1.9.22'
        reflections = '0.10.2'
        lombok = '1.18.32'
        restassured = '5.4.0'
        jacksondatabind = '2.17.0'


    }
}
plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
//    id "io.freefair.lombok" version "8.6"
}

group = 'com.epam'
version = '1.0-SNAPSHOT'

repositories {
    gradlePluginPortal()
    mavenCentral()
}

def framework = System.getProperty('framework')
//env browser = System.getProperty('browser')
//def ui_url = System.getProperty('')
//println browser
//println ui_url
//def username = System.getProperty('username')
//def password = System.getProperty('password')

dependencies {
    runtimeOnly group: 'org.aspectj', name: 'aspectjweaver', version: "$aspectj"
    implementation group: 'commons-io', name: 'commons-io', version: "$apache"
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: "$selenium"
    testImplementation group: 'org.testng', name: 'testng', version: "$testng"
    testImplementation group: 'io.cucumber', name: 'cucumber-java', version: "$cucumber"
    testImplementation group: 'io.cucumber', name: 'cucumber-core', version: "$cucumber"
    testImplementation group: 'io.cucumber', name: 'cucumber-testng', version: "$cucumber"
    testImplementation group: 'io.cucumber', name: 'cucumber-html', version: '0.2.7'
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: "$log4j"
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: "$log4j"
    testImplementation platform("io.qameta.allure:allure-bom:$allure")
    testImplementation group: 'io.qameta.allure', name: 'allure-testng', version: "$allure"
    testImplementation group: 'io.qameta.allure', name: 'allure-junit5', version: "$allure"
    implementation group: 'io.qameta.allure', name: 'allure-cucumber7-jvm', version: "$allure"
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: "$apachexml"
    testImplementation group: 'io.cucumber', name: 'cucumber-junit', version: "$cucumber"
    implementation group: 'org.reflections', name: 'reflections', version: "$reflections"
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: "$lombok"
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: "$lombok"
    testImplementation group: 'io.cucumber', name: 'cucumber-picocontainer', version: "$cucumber"
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: "$restassured"
    implementation group: 'io.qameta.allure', name: 'allure-rest-assured', version: "$allure"
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "$jacksondatabind"
}

java {
    sourceCompatibility = '11'
}
configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

tasks.named('test').configure {
    finalizedBy 'allureReport'
}

tasks.withType(Test).configureEach {
    if (!hasProperty('framework') || framework == 'testng') {
        useTestNG {
            setParallel("methods")
            setThreadCount(1)
            useDefaultListeners = true
            useDefaultListeners = false
            listeners << 'io.qameta.allure.testng.AllureTestNg'
            systemProperties System.getProperties()
            systemProperty 'cucumber.filter.tags', System.properties['cucumber.filter.tags']
            scanForTestClasses = false
//    jvmArgs(["-Ddataproviderthreadcount=$threads"])
            testLogging.showStandardStreams(false)
            ignoreFailures = true
            failFast = false
            //   finalizedBy 'allureReport'
        }
    }
}

tasks.withType(Test).configureEach {
    if (framework == 'junit') {
        dependsOn assemble, testClasses
        doLast {
            javaexec {
                main = "io.cucumber.core.cli.Main"
                classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
                args = ['--plugin', 'pretty',
                        '--plugin', 'io.qameta.allure.cucumber7jvm.AllureCucumber7Jvm',
                        '--glue', 'reportportal',
                        '--tags', project.findProperty("cucumber.filter.tags") ?: "@health",
                        'src/test/resources']
            }
        }
    }
}